### Some tweaks to make kali work better for me ###

# vmware shared folders & guest tools
sudo apt update
sudo apt install -y --reinstall open-vm-tools-desktop fuse
sudo reboot -f
kali-tweaks
# In the Kali Tweaks menu, select Virtualization, then Install additional packages and scripts for VMware.
sudo mount-shared-folders
# additional script to restart VM tools if things stop working like copy paste
sudo restart-vm-tools

# aliases 
vim ~/.zshrc
alias lt='ls -latrF'
alias resize='sudo xrandr --output Virtual-1 --auto'
alias automount='sudo mount-shared-folders'
alias ipt='sudo iptables -nvL --line-numbers'
alias scriptme='asciinema rec'
alias bloodhound='/opt/BloodHound-linux-arm64/BloodHound --no-sandbox --disable-gpu'
alias fixscroll='imwheel -b "4 5" > /dev/null 2>&1'

# fix scrolling
sudo apt install imwheel
imwheel -b "4 5" > /dev/null 2>&1

# resize screen vmware 
sudo xrandr --output Virtual-1 --auto



### Running Kali ARM ###
# run x86 code
wget https://snapshot.debian.org/archive/debian/20240509T024809Z/pool/main/q/qemu/qemu-user-static_8.2.3%2Bds-2_arm64.deb
sudo apt install ./qemu-user-static_8.2.3+ds-2_arm64.deb
sudo apt update
sudo apt install -y qemu-user-static binfmt-support
sudo dpkg --add-architecture amd64
sudo apt update
sudo apt install libc6:amd64
sudo dpkg --add-architecture amd64

# sudo apt install -y powershell

# if x86 binary doesnt autorun
qemu-x86_64-static <BINARY>



# Make kerbrute for arm64
sudo apt install gccgo-go  
sudo apt install golang-go
git clone https://github.com/ropnop/kerbrute.git
cd kerbrute   
vim Makefile
#edit    ARCHS=amd64 386 arm64
make linux
cp dist/kerbrute_linux_arm64 /mnt/hgfs/OSCP/tools


# x86 Docker